#include <EEPROM.h>

#include <Servo.h>

#include <PS2X_lib.h>
#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>

#define OLED_RESET 4
Adafruit_SSD1306 display(128, 64, &Wire, OLED_RESET);

int think_delay = 100;
int scan_delay = 200;
int recon_delay = 100;
int oxy_delay = 300;
int heart_delay = 100;
int blink_delay = 100;
int batt_delay = 500;
int look_delay = 100;
int link_delay = 500;

//Paste your bitmap here

// 'think_1', 36x36px
const unsigned char think1[] PROGMEM = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x80, 0x00, 0x00,
    0x70, 0x03, 0xe0, 0x00, 0x00, 0xe0, 0x00, 0x70, 0x00, 0x03, 0xc1, 0xc0, 0x3c, 0x00, 0x07, 0x00,
    0x03, 0x0e, 0x00, 0x06, 0x00, 0x00, 0xc6, 0x00, 0x0c, 0x60, 0x00, 0x03, 0x00, 0x1c, 0xc0, 0x00,
    0x03, 0x80, 0x18, 0x81, 0xf8, 0x01, 0x80, 0x30, 0x07, 0xfe, 0x08, 0x80, 0x30, 0x0f, 0xff, 0x04,
    0x00, 0x30, 0x1f, 0x0f, 0x84, 0x00, 0x66, 0x1c, 0x03, 0x84, 0x00, 0x64, 0x3c, 0x03, 0xc0, 0x00,
    0x64, 0x38, 0x01, 0xc0, 0x00, 0x64, 0x38, 0x01, 0xc0, 0x00, 0x00, 0x38, 0x01, 0xc0, 0x60, 0x00,
    0x38, 0x01, 0xc2, 0x60, 0x00, 0x3c, 0x03, 0xc2, 0x60, 0x06, 0x1c, 0x03, 0x86, 0x60, 0x02, 0x1f,
    0x0f, 0x80, 0xc0, 0x02, 0x0f, 0xff, 0x00, 0xc0, 0x10, 0x07, 0xfe, 0x00, 0xc0, 0x18, 0x01, 0xf8,
    0x01, 0x80, 0x1c, 0x00, 0x00, 0x33, 0x80, 0x0c, 0x20, 0x00, 0x63, 0x00, 0x06, 0x30, 0x00, 0x46,
    0x00, 0x07, 0x08, 0x00, 0x0e, 0x00, 0x03, 0xc0, 0x78, 0x3c, 0x00, 0x00, 0xe0, 0x00, 0x70, 0x00,
    0x00, 0x7c, 0x00, 0xe0, 0x00, 0x00, 0x1f, 0xc0, 0x00, 0x00, 0x00, 0x03, 0xc0, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00};
// 'think_2', 36x36px
const unsigned char think2[] PROGMEM = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xfc, 0x00, 0x00, 0x00, 0x0f, 0xff, 0x80, 0x00, 0x00,
    0x04, 0x03, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 0x00, 0x18, 0x3c, 0x00, 0x06, 0x0e,
    0x06, 0x0c, 0x00, 0x06, 0x10, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x20, 0x00, 0x1c, 0x00, 0x00,
    0x30, 0x00, 0x19, 0x01, 0xf8, 0x18, 0x00, 0x31, 0x07, 0xfe, 0x08, 0x00, 0x32, 0x0f, 0xff, 0x00,
    0x40, 0x32, 0x1f, 0x0f, 0x80, 0xc0, 0x60, 0x1c, 0x03, 0x80, 0x40, 0x60, 0x3c, 0x03, 0xc2, 0x60,
    0x64, 0x38, 0x01, 0xc2, 0x60, 0x64, 0x38, 0x01, 0xc2, 0x60, 0x64, 0x38, 0x01, 0xc2, 0x60, 0x64,
    0x38, 0x01, 0xc0, 0x60, 0x60, 0x3c, 0x03, 0xc0, 0x60, 0x20, 0x1c, 0x03, 0x80, 0x60, 0x30, 0x1f,
    0x0f, 0x80, 0xc0, 0x20, 0x0f, 0xff, 0x04, 0xc0, 0x01, 0x07, 0xfe, 0x08, 0xc0, 0x01, 0x81, 0xf8,
    0x19, 0x80, 0x00, 0xc0, 0x00, 0x03, 0x80, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x06,
    0x00, 0x03, 0x06, 0x07, 0x06, 0x00, 0x03, 0xc1, 0x04, 0x00, 0x00, 0x00, 0xe0, 0x00, 0x00, 0x00,
    0x00, 0x7c, 0x02, 0x00, 0x00, 0x00, 0x1f, 0xff, 0x00, 0x00, 0x00, 0x03, 0xf8, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00};
// 'think_3', 36x36px
const unsigned char think3[] PROGMEM = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xfc, 0x00, 0x00, 0x00, 0x1f, 0xfe, 0x00, 0x00, 0x00,
    0x7c, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x00, 0x00, 0x00, 0x01, 0xc1, 0xc0, 0x08, 0x00, 0x03, 0x00,
    0x03, 0x0c, 0x00, 0x02, 0x00, 0x00, 0xc6, 0x00, 0x00, 0x60, 0x00, 0x03, 0x00, 0x00, 0xc0, 0x00,
    0x03, 0x80, 0x00, 0x81, 0xf8, 0x01, 0x80, 0x00, 0x07, 0xfe, 0x08, 0xc0, 0x00, 0x0f, 0xff, 0x04,
    0xc0, 0x20, 0x1f, 0x0f, 0x84, 0xc0, 0x64, 0x1c, 0x03, 0x80, 0x60, 0x64, 0x3c, 0x03, 0xc0, 0x60,
    0x64, 0x38, 0x01, 0xc0, 0x60, 0x64, 0x38, 0x01, 0xc0, 0x60, 0x60, 0x38, 0x01, 0xc0, 0x60, 0x60,
    0x38, 0x01, 0xc2, 0x60, 0x60, 0x3c, 0x03, 0xc2, 0x60, 0x66, 0x1c, 0x03, 0x86, 0x60, 0x32, 0x1f,
    0x0f, 0x80, 0x40, 0x32, 0x0f, 0xff, 0x00, 0x00, 0x30, 0x07, 0xfe, 0x00, 0x00, 0x18, 0x01, 0xf8,
    0x00, 0x00, 0x1c, 0x00, 0x00, 0x30, 0x00, 0x0c, 0x20, 0x00, 0x60, 0x00, 0x06, 0x30, 0x00, 0x46,
    0x00, 0x03, 0x08, 0x00, 0x0c, 0x00, 0x01, 0x00, 0x78, 0x38, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00,
    0x00, 0x00, 0x03, 0xe0, 0x00, 0x00, 0x07, 0xff, 0x80, 0x00, 0x00, 0x03, 0xfc, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00};
// 'think_4', 36x36px
const unsigned char think4[] PROGMEM = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x18, 0x1f, 0x80, 0x00, 0x00,
    0x78, 0x03, 0xe0, 0x00, 0x00, 0xe0, 0x00, 0x70, 0x00, 0x03, 0xc0, 0x3c, 0x3c, 0x00, 0x07, 0x0c,
    0x04, 0x0e, 0x00, 0x06, 0x10, 0x00, 0x06, 0x00, 0x0c, 0x00, 0x00, 0x63, 0x00, 0x1c, 0x00, 0x00,
    0x33, 0x80, 0x19, 0x81, 0xf8, 0x11, 0x80, 0x31, 0x07, 0xfe, 0x00, 0xc0, 0x32, 0x0f, 0xff, 0x00,
    0xc0, 0x30, 0x1f, 0x0f, 0x80, 0x00, 0x20, 0x1c, 0x03, 0x80, 0x00, 0x60, 0x3c, 0x03, 0xc2, 0x00,
    0x20, 0x38, 0x01, 0xc2, 0x00, 0x04, 0x38, 0x01, 0xc2, 0x00, 0x04, 0x38, 0x01, 0xc0, 0x00, 0x04,
    0x38, 0x01, 0xc0, 0x40, 0x04, 0x3c, 0x03, 0xc0, 0x60, 0x00, 0x1c, 0x03, 0x80, 0x40, 0x00, 0x1f,
    0x0f, 0x84, 0xc0, 0x30, 0x0f, 0xff, 0x04, 0xc0, 0x31, 0x07, 0xfe, 0x08, 0xc0, 0x18, 0x81, 0xf8,
    0x09, 0x80, 0x1c, 0xc0, 0x00, 0x03, 0x80, 0x0c, 0x40, 0x00, 0x03, 0x00, 0x06, 0x00, 0x00, 0x86,
    0x00, 0x07, 0x06, 0x07, 0x0e, 0x00, 0x03, 0xc3, 0x80, 0x3c, 0x00, 0x00, 0xe0, 0x00, 0x70, 0x00,
    0x00, 0x7c, 0x01, 0xe0, 0x00, 0x00, 0x1f, 0x81, 0x80, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00};
// 'think_5', 36x36px
const unsigned char think5[] PROGMEM = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xfc, 0x00, 0x00, 0x00, 0x1f, 0xff, 0x80, 0x00, 0x00,
    0x3c, 0x03, 0xe0, 0x00, 0x00, 0x60, 0x00, 0x60, 0x00, 0x00, 0x03, 0x80, 0x00, 0x00, 0x00, 0x02,
    0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x18, 0xc0, 0x00,
    0x11, 0x00, 0x18, 0x81, 0xf8, 0x11, 0x80, 0x30, 0x07, 0xfe, 0x08, 0xc0, 0x30, 0x0f, 0xff, 0x00,
    0xc0, 0x30, 0x1f, 0x0f, 0x80, 0xc0, 0x60, 0x1c, 0x03, 0x80, 0x60, 0x64, 0x3c, 0x03, 0xc0, 0x60,
    0x64, 0x38, 0x01, 0xc2, 0x60, 0x64, 0x38, 0x01, 0xc2, 0x60, 0x64, 0x38, 0x01, 0xc2, 0x60, 0x60,
    0x38, 0x01, 0xc2, 0x60, 0x60, 0x3c, 0x03, 0xc0, 0x60, 0x60, 0x1c, 0x03, 0x80, 0x60, 0x30, 0x1f,
    0x0f, 0x80, 0xc0, 0x32, 0x0f, 0xff, 0x00, 0xc0, 0x31, 0x07, 0xfe, 0x08, 0xc0, 0x18, 0x81, 0xf8,
    0x11, 0x80, 0x08, 0x00, 0x00, 0x31, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x0e, 0x06, 0x00, 0x00, 0x00, 0x02, 0x1c, 0x00, 0x00, 0x00, 0x60, 0x00, 0x60, 0x00,
    0x00, 0x7c, 0x03, 0xc0, 0x00, 0x00, 0x1f, 0xff, 0x80, 0x00, 0x00, 0x03, 0xfc, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00};
// 'think_6', 36x36px
const unsigned char think6[] PROGMEM = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x80, 0x00, 0x00, 0x00, 0x1f, 0x81, 0x00, 0x00, 0x00,
    0x7c, 0x01, 0xe0, 0x00, 0x00, 0xe0, 0x00, 0x70, 0x00, 0x03, 0xc0, 0x38, 0x3c, 0x00, 0x07, 0x0c,
    0x04, 0x0e, 0x00, 0x06, 0x10, 0x00, 0x06, 0x00, 0x0c, 0x00, 0x00, 0x23, 0x00, 0x1c, 0x00, 0x00,
    0x33, 0x80, 0x19, 0x01, 0xf8, 0x19, 0x80, 0x11, 0x07, 0xfe, 0x00, 0xc0, 0x32, 0x0f, 0xff, 0x00,
    0xc0, 0x02, 0x1f, 0x0f, 0x80, 0xc0, 0x00, 0x1c, 0x03, 0x80, 0x60, 0x00, 0x3c, 0x03, 0xc2, 0x60,
    0x00, 0x38, 0x01, 0xc2, 0x60, 0x00, 0x38, 0x01, 0xc2, 0x00, 0x04, 0x38, 0x01, 0xc2, 0x00, 0x64,
    0x38, 0x01, 0xc0, 0x00, 0x64, 0x3c, 0x03, 0xc0, 0x00, 0x64, 0x1c, 0x03, 0x84, 0x00, 0x30, 0x1f,
    0x0f, 0x84, 0x00, 0x30, 0x0f, 0xff, 0x04, 0xc0, 0x30, 0x07, 0xfe, 0x08, 0x80, 0x18, 0x81, 0xf8,
    0x01, 0x80, 0x1c, 0xc0, 0x00, 0x03, 0x80, 0x0c, 0x60, 0x00, 0x03, 0x00, 0x06, 0x00, 0x00, 0xc6,
    0x00, 0x07, 0x00, 0x03, 0x0e, 0x00, 0x03, 0xc1, 0xc0, 0x3c, 0x00, 0x00, 0xe0, 0x00, 0x70, 0x00,
    0x00, 0x78, 0x03, 0xe0, 0x00, 0x00, 0x08, 0x1f, 0x80, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00};
// 'think_7', 36x36px
const unsigned char think7[] PROGMEM = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xc0, 0x00, 0x00, 0x00, 0x1f, 0xc0, 0x00, 0x00, 0x00,
    0x7c, 0x00, 0x60, 0x00, 0x00, 0xe0, 0x00, 0x70, 0x00, 0x03, 0xc3, 0xc0, 0x3c, 0x00, 0x07, 0x02,
    0x03, 0x0e, 0x00, 0x06, 0x00, 0x00, 0x86, 0x00, 0x0c, 0x40, 0x00, 0x03, 0x00, 0x1c, 0xc0, 0x00,
    0x03, 0x80, 0x18, 0x81, 0xf8, 0x01, 0x80, 0x00, 0x07, 0xfe, 0x08, 0xc0, 0x00, 0x0f, 0xff, 0x04,
    0xc0, 0x00, 0x1f, 0x0f, 0x84, 0xc0, 0x00, 0x1c, 0x03, 0x80, 0x60, 0x04, 0x3c, 0x03, 0xc0, 0x60,
    0x04, 0x38, 0x01, 0xc0, 0x60, 0x04, 0x38, 0x01, 0xc0, 0x60, 0x64, 0x38, 0x01, 0xc2, 0x00, 0x60,
    0x38, 0x01, 0xc2, 0x00, 0x60, 0x3c, 0x03, 0xc2, 0x00, 0x60, 0x1c, 0x03, 0x84, 0x00, 0x32, 0x1f,
    0x0f, 0x80, 0x00, 0x32, 0x0f, 0xff, 0x00, 0x00, 0x31, 0x07, 0xfe, 0x08, 0x00, 0x19, 0x81, 0xf8,
    0x11, 0x80, 0x1c, 0x00, 0x00, 0x33, 0x80, 0x0c, 0x00, 0x00, 0x23, 0x00, 0x06, 0x10, 0x00, 0x06,
    0x00, 0x07, 0x0e, 0x06, 0x0e, 0x00, 0x03, 0xc0, 0x1c, 0x3c, 0x00, 0x00, 0xe0, 0x00, 0x70, 0x00,
    0x00, 0x60, 0x03, 0xe0, 0x00, 0x00, 0x00, 0x3f, 0x80, 0x00, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00};
// 'think_8', 36x36px
const unsigned char think8[] PROGMEM = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1c, 0x07, 0x80, 0x00, 0x00,
    0x7c, 0x03, 0xe0, 0x00, 0x00, 0xe0, 0x00, 0x70, 0x00, 0x03, 0xc0, 0x3c, 0x3c, 0x00, 0x07, 0x0c,
    0x04, 0x0e, 0x00, 0x06, 0x10, 0x00, 0x06, 0x00, 0x0c, 0x00, 0x00, 0x23, 0x00, 0x1c, 0x00, 0x00,
    0x33, 0x80, 0x18, 0x01, 0xf8, 0x19, 0x80, 0x31, 0x07, 0xfe, 0x00, 0xc0, 0x32, 0x0f, 0xff, 0x00,
    0xc0, 0x32, 0x1f, 0x0f, 0x80, 0xc0, 0x20, 0x1c, 0x03, 0x80, 0x00, 0x00, 0x3c, 0x03, 0xc2, 0x00,
    0x00, 0x38, 0x01, 0xc2, 0x00, 0x00, 0x38, 0x01, 0xc2, 0x00, 0x04, 0x38, 0x01, 0xc2, 0x00, 0x04,
    0x38, 0x01, 0xc0, 0x00, 0x04, 0x3c, 0x03, 0xc0, 0x00, 0x02, 0x1c, 0x03, 0x80, 0x40, 0x30, 0x1f,
    0x0f, 0x84, 0xc0, 0x30, 0x0f, 0xff, 0x04, 0xc0, 0x31, 0x07, 0xfe, 0x08, 0xc0, 0x19, 0x81, 0xf8,
    0x19, 0x80, 0x1c, 0xc0, 0x00, 0x03, 0x80, 0x0c, 0x40, 0x00, 0x03, 0x00, 0x06, 0x00, 0x00, 0x86,
    0x00, 0x07, 0x06, 0x07, 0x0e, 0x00, 0x03, 0xc3, 0x80, 0x3c, 0x00, 0x00, 0xe0, 0x00, 0x70, 0x00,
    0x00, 0x7c, 0x03, 0xe0, 0x00, 0x00, 0x1e, 0x03, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00};

//==============LOOK AROUND ANIMATION

// 'look_1', 36x36px
const unsigned char look1[] PROGMEM = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x80, 0x00, 0x00,
    0x70, 0x03, 0xe0, 0x00, 0x00, 0xe0, 0x00, 0x70, 0x00, 0x03, 0xc1, 0xc0, 0x3c, 0x00, 0x07, 0x00,
    0x03, 0x0e, 0x00, 0x06, 0x00, 0x00, 0xc6, 0x00, 0x0c, 0x60, 0x00, 0x03, 0x00, 0x1c, 0xc0, 0x00,
    0x03, 0x80, 0x18, 0x81, 0xf8, 0x01, 0x80, 0x30, 0x07, 0xfe, 0x08, 0x80, 0x30, 0x0f, 0xff, 0x04,
    0x00, 0x30, 0x1f, 0x0f, 0x84, 0x00, 0x66, 0x1c, 0x03, 0x84, 0x00, 0x64, 0x3c, 0x03, 0xc0, 0x00,
    0x64, 0x38, 0x01, 0xc0, 0x00, 0x64, 0x38, 0x01, 0xc0, 0x00, 0x00, 0x38, 0x01, 0xc0, 0x60, 0x00,
    0x38, 0x01, 0xc2, 0x60, 0x00, 0x3c, 0x03, 0xc2, 0x60, 0x06, 0x1c, 0x03, 0x86, 0x60, 0x02, 0x1f,
    0x0f, 0x80, 0xc0, 0x02, 0x0f, 0xff, 0x00, 0xc0, 0x10, 0x07, 0xfe, 0x00, 0xc0, 0x18, 0x01, 0xf8,
    0x01, 0x80, 0x1c, 0x00, 0x00, 0x33, 0x80, 0x0c, 0x20, 0x00, 0x63, 0x00, 0x06, 0x30, 0x00, 0x46,
    0x00, 0x07, 0x08, 0x00, 0x0e, 0x00, 0x03, 0xc0, 0x78, 0x3c, 0x00, 0x00, 0xe0, 0x00, 0x70, 0x00,
    0x00, 0x7c, 0x00, 0xe0, 0x00, 0x00, 0x1f, 0xc0, 0x00, 0x00, 0x00, 0x03, 0xc0, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00};
// 'look_2', 36x36px
const unsigned char look2[] PROGMEM = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xc0, 0x00, 0x00, 0x00, 0x1f, 0xc0, 0x00, 0x00, 0x00,
    0x7c, 0x00, 0xe0, 0x00, 0x00, 0xe0, 0x00, 0x70, 0x00, 0x03, 0xc1, 0xc0, 0x3c, 0x00, 0x07, 0x00,
    0x03, 0x0e, 0x00, 0x06, 0x00, 0x00, 0xc6, 0x00, 0x0c, 0x60, 0x00, 0x03, 0x00, 0x1c, 0xc0, 0x00,
    0x03, 0x80, 0x18, 0x81, 0xc0, 0x01, 0x80, 0x10, 0x07, 0xc0, 0x08, 0xc0, 0x00, 0x0f, 0x80, 0x04,
    0xc0, 0x00, 0x1f, 0x80, 0x04, 0xc0, 0x06, 0x1f, 0x80, 0x04, 0x60, 0x04, 0x3f, 0x80, 0x00, 0x60,
    0x04, 0x3f, 0xc0, 0x00, 0x60, 0x04, 0x3f, 0xc0, 0x00, 0x60, 0x60, 0x3f, 0xf0, 0xc0, 0x00, 0x60,
    0x3f, 0xff, 0xc2, 0x00, 0x60, 0x3f, 0xff, 0xc2, 0x00, 0x66, 0x1f, 0xff, 0x86, 0x00, 0x32, 0x1f,
    0xff, 0x80, 0x00, 0x32, 0x0f, 0xff, 0x00, 0x00, 0x30, 0x07, 0xfe, 0x00, 0x80, 0x18, 0x01, 0xf8,
    0x01, 0x80, 0x1c, 0x00, 0x00, 0x33, 0x80, 0x0c, 0x20, 0x00, 0x63, 0x00, 0x06, 0x30, 0x00, 0x46,
    0x00, 0x07, 0x08, 0x00, 0x0e, 0x00, 0x03, 0xc0, 0x78, 0x3c, 0x00, 0x00, 0xe0, 0x00, 0x70, 0x00,
    0x00, 0x70, 0x03, 0xe0, 0x00, 0x00, 0x00, 0x3f, 0x80, 0x00, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00};
// 'look_3', 36x36px
const unsigned char look3[] PROGMEM = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xfc, 0x00, 0x00, 0x00, 0x1f, 0xff, 0x80, 0x00, 0x00,
    0x3c, 0x03, 0xe0, 0x00, 0x00, 0x20, 0x00, 0x70, 0x00, 0x00, 0x01, 0xc0, 0x20, 0x00, 0x00, 0x00,
    0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x00, 0x08, 0x60, 0x00, 0x00, 0x00, 0x1c, 0xc0, 0x00,
    0x00, 0x00, 0x18, 0x81, 0xf8, 0x01, 0x80, 0x30, 0x07, 0xfe, 0x08, 0xc0, 0x30, 0x0f, 0xff, 0x04,
    0xc0, 0x30, 0x1f, 0x0f, 0x84, 0xc0, 0x66, 0x1c, 0x03, 0x84, 0x60, 0x64, 0x3c, 0x03, 0xc0, 0x60,
    0x64, 0x38, 0x01, 0xc0, 0x60, 0x64, 0x38, 0x01, 0xc0, 0x60, 0x60, 0x38, 0x01, 0xc0, 0x60, 0x60,
    0x38, 0x01, 0xc2, 0x60, 0x60, 0x3c, 0x03, 0xc2, 0x60, 0x66, 0x1c, 0x03, 0x86, 0x60, 0x32, 0x1f,
    0x0f, 0x80, 0xc0, 0x32, 0x0f, 0xff, 0x00, 0xc0, 0x30, 0x07, 0xfe, 0x00, 0xc0, 0x18, 0x01, 0xf8,
    0x01, 0x80, 0x00, 0x00, 0x00, 0x33, 0x80, 0x00, 0x20, 0x00, 0x61, 0x00, 0x00, 0x30, 0x00, 0x40,
    0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x40, 0x78, 0x00, 0x00, 0x00, 0xe0, 0x00, 0x40, 0x00,
    0x00, 0x7c, 0x03, 0xc0, 0x00, 0x00, 0x1f, 0xff, 0x80, 0x00, 0x00, 0x03, 0xfc, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00};
// 'look_4', 36x36px
const unsigned char look4[] PROGMEM = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x03, 0x80, 0x00, 0x00,
    0x7c, 0x03, 0xe0, 0x00, 0x00, 0xe0, 0x00, 0x70, 0x00, 0x03, 0xc1, 0xc0, 0x3c, 0x00, 0x07, 0x00,
    0x03, 0x0e, 0x00, 0x06, 0x00, 0x00, 0xc6, 0x00, 0x0c, 0x60, 0x00, 0x03, 0x00, 0x1c, 0xc0, 0x00,
    0x03, 0x80, 0x18, 0x80, 0xf8, 0x01, 0x80, 0x30, 0x00, 0x3e, 0x08, 0xc0, 0x30, 0x00, 0x3f, 0x04,
    0xc0, 0x30, 0x00, 0x1f, 0x84, 0xc0, 0x06, 0x00, 0x1f, 0x84, 0x60, 0x04, 0x00, 0x1f, 0xc0, 0x60,
    0x04, 0x00, 0x1f, 0xc0, 0x00, 0x04, 0x00, 0x3f, 0xc0, 0x00, 0x00, 0x00, 0x3f, 0xc0, 0x00, 0x00,
    0x30, 0xff, 0xc2, 0x00, 0x60, 0x3f, 0xff, 0xc2, 0x00, 0x66, 0x1f, 0xff, 0x86, 0x00, 0x32, 0x1f,
    0xff, 0x80, 0xc0, 0x32, 0x0f, 0xff, 0x00, 0xc0, 0x30, 0x07, 0xfe, 0x00, 0xc0, 0x18, 0x01, 0xf8,
    0x01, 0x80, 0x1c, 0x00, 0x00, 0x33, 0x80, 0x0c, 0x20, 0x00, 0x63, 0x00, 0x06, 0x30, 0x00, 0x46,
    0x00, 0x07, 0x08, 0x00, 0x0e, 0x00, 0x03, 0xc0, 0x78, 0x3c, 0x00, 0x00, 0xe0, 0x00, 0x70, 0x00,
    0x00, 0x7c, 0x03, 0xe0, 0x00, 0x00, 0x1c, 0x0f, 0x80, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00};
// 'look_5', 36x36px
const unsigned char look5[] PROGMEM = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x80, 0x00, 0x00,
    0x70, 0x03, 0xe0, 0x00, 0x00, 0xe0, 0x00, 0x70, 0x00, 0x03, 0xc1, 0xc0, 0x3c, 0x00, 0x07, 0x00,
    0x03, 0x0e, 0x00, 0x06, 0x00, 0x00, 0xc6, 0x00, 0x0c, 0x60, 0x00, 0x03, 0x00, 0x1c, 0xc0, 0x00,
    0x03, 0x80, 0x18, 0x81, 0xf8, 0x01, 0x80, 0x30, 0x07, 0xfe, 0x08, 0x80, 0x30, 0x0f, 0xff, 0x04,
    0x00, 0x30, 0x1f, 0x0f, 0x84, 0x00, 0x66, 0x1c, 0x03, 0x84, 0x00, 0x64, 0x3c, 0x03, 0xc0, 0x00,
    0x64, 0x38, 0x01, 0xc0, 0x00, 0x64, 0x38, 0x01, 0xc0, 0x00, 0x00, 0x38, 0x01, 0xc0, 0x60, 0x00,
    0x38, 0x01, 0xc2, 0x60, 0x00, 0x3c, 0x03, 0xc2, 0x60, 0x06, 0x1c, 0x03, 0x86, 0x60, 0x02, 0x1f,
    0x0f, 0x80, 0xc0, 0x02, 0x0f, 0xff, 0x00, 0xc0, 0x10, 0x07, 0xfe, 0x00, 0xc0, 0x18, 0x01, 0xf8,
    0x01, 0x80, 0x1c, 0x00, 0x00, 0x33, 0x80, 0x0c, 0x20, 0x00, 0x63, 0x00, 0x06, 0x30, 0x00, 0x46,
    0x00, 0x07, 0x08, 0x00, 0x0e, 0x00, 0x03, 0xc0, 0x78, 0x3c, 0x00, 0x00, 0xe0, 0x00, 0x70, 0x00,
    0x00, 0x7c, 0x00, 0xe0, 0x00, 0x00, 0x1f, 0xc0, 0x00, 0x00, 0x00, 0x03, 0xc0, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00};
// 'look_6', 36x36px
const unsigned char look6[] PROGMEM = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xfc, 0x00, 0x00, 0x00, 0x1f, 0xff, 0x80, 0x00, 0x00,
    0x3c, 0x03, 0xe0, 0x00, 0x00, 0x20, 0x00, 0x70, 0x00, 0x00, 0x01, 0xc0, 0x20, 0x00, 0x00, 0x00,
    0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x00, 0x08, 0x60, 0x00, 0x00, 0x00, 0x1c, 0xc0, 0x00,
    0x00, 0x00, 0x18, 0x81, 0xf8, 0x01, 0x80, 0x30, 0x07, 0xfe, 0x08, 0xc0, 0x30, 0x0f, 0xff, 0x04,
    0xc0, 0x30, 0x1f, 0x0f, 0x84, 0xc0, 0x66, 0x1c, 0x03, 0x84, 0x60, 0x64, 0x3c, 0x03, 0xc0, 0x60,
    0x64, 0x38, 0x01, 0xc0, 0x60, 0x64, 0x38, 0x01, 0xc0, 0x60, 0x60, 0x38, 0x01, 0xc0, 0x60, 0x60,
    0x38, 0x01, 0xc2, 0x60, 0x60, 0x3c, 0x03, 0xc2, 0x60, 0x66, 0x1c, 0x03, 0x86, 0x60, 0x32, 0x1f,
    0x0f, 0x80, 0xc0, 0x32, 0x0f, 0xff, 0x00, 0xc0, 0x30, 0x07, 0xfe, 0x00, 0xc0, 0x18, 0x01, 0xf8,
    0x01, 0x80, 0x00, 0x00, 0x00, 0x33, 0x80, 0x00, 0x20, 0x00, 0x61, 0x00, 0x00, 0x30, 0x00, 0x40,
    0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x40, 0x78, 0x00, 0x00, 0x00, 0xe0, 0x00, 0x40, 0x00,
    0x00, 0x7c, 0x03, 0xc0, 0x00, 0x00, 0x1f, 0xff, 0x80, 0x00, 0x00, 0x03, 0xfc, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00};
// 'look_7', 36x36px
const unsigned char look7[] PROGMEM = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1c, 0x0f, 0x80, 0x00, 0x00,
    0x7c, 0x03, 0xe0, 0x00, 0x00, 0xe0, 0x00, 0x70, 0x00, 0x03, 0xc1, 0xc0, 0x3c, 0x00, 0x07, 0x00,
    0x03, 0x0e, 0x00, 0x06, 0x00, 0x00, 0xc6, 0x00, 0x0c, 0x60, 0x00, 0x03, 0x00, 0x1c, 0xc0, 0x00,
    0x03, 0x80, 0x18, 0x81, 0xf8, 0x01, 0x80, 0x30, 0x07, 0xfe, 0x08, 0xc0, 0x30, 0x0f, 0xff, 0x04,
    0xc0, 0x30, 0x1f, 0xff, 0x84, 0xc0, 0x26, 0x1f, 0xff, 0x84, 0x00, 0x24, 0x3f, 0xff, 0xc0, 0x00,
    0x04, 0x3f, 0xff, 0xc0, 0x00, 0x04, 0x3f, 0x0f, 0xc0, 0x00, 0x00, 0x3c, 0x03, 0xc0, 0x00, 0x00,
    0x3c, 0x03, 0xc2, 0x00, 0x00, 0x38, 0x01, 0xc2, 0x40, 0x06, 0x18, 0x01, 0x86, 0x40, 0x32, 0x18,
    0x01, 0x80, 0xc0, 0x32, 0x08, 0x01, 0x00, 0xc0, 0x30, 0x00, 0x00, 0x00, 0xc0, 0x18, 0x00, 0x00,
    0x01, 0x80, 0x1c, 0x00, 0x00, 0x33, 0x80, 0x0c, 0x20, 0x00, 0x63, 0x00, 0x06, 0x30, 0x00, 0x46,
    0x00, 0x07, 0x08, 0x00, 0x0e, 0x00, 0x03, 0xc0, 0x78, 0x3c, 0x00, 0x00, 0xe0, 0x00, 0x70, 0x00,
    0x00, 0x7c, 0x03, 0xe0, 0x00, 0x00, 0x1f, 0x03, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00};
// 'look_8', 36x36px
const unsigned char look8[] PROGMEM = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xfc, 0x00, 0x00, 0x00, 0x1f, 0xff, 0x80, 0x00, 0x00,
    0x7c, 0x03, 0xe0, 0x00, 0x00, 0xe0, 0x00, 0x40, 0x00, 0x00, 0x41, 0xc0, 0x00, 0x00, 0x00, 0x00,
    0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x00, 0x00, 0x60, 0x00, 0x01, 0x00, 0x10, 0xc0, 0x00,
    0x03, 0x80, 0x18, 0x81, 0xf8, 0x01, 0x80, 0x30, 0x07, 0xfe, 0x08, 0xc0, 0x30, 0x0f, 0xff, 0x04,
    0xc0, 0x30, 0x1f, 0x0f, 0x84, 0xc0, 0x66, 0x1c, 0x03, 0x84, 0x60, 0x64, 0x3c, 0x03, 0xc0, 0x60,
    0x64, 0x38, 0x01, 0xc0, 0x60, 0x64, 0x38, 0x01, 0xc0, 0x60, 0x60, 0x38, 0x01, 0xc0, 0x60, 0x60,
    0x38, 0x01, 0xc2, 0x60, 0x60, 0x3c, 0x03, 0xc2, 0x60, 0x66, 0x1c, 0x03, 0x86, 0x60, 0x32, 0x1f,
    0x0f, 0x80, 0xc0, 0x32, 0x0f, 0xff, 0x00, 0xc0, 0x30, 0x07, 0xfe, 0x00, 0xc0, 0x18, 0x01, 0xf8,
    0x01, 0x80, 0x1c, 0x00, 0x00, 0x30, 0x80, 0x08, 0x20, 0x00, 0x60, 0x00, 0x00, 0x30, 0x00, 0x40,
    0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x20, 0x00, 0x00, 0x20, 0x00, 0x70, 0x00,
    0x00, 0x7c, 0x03, 0xe0, 0x00, 0x00, 0x1f, 0xff, 0x80, 0x00, 0x00, 0x03, 0xfc, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00};
// 'look_9', 36x36px
const unsigned char look9[] PROGMEM = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xfc, 0x00, 0x00, 0x00, 0x1f, 0xff, 0x80, 0x00, 0x00,
    0x7c, 0x03, 0x80, 0x00, 0x00, 0xe0, 0x00, 0x00, 0x00, 0x01, 0xc1, 0xc0, 0x00, 0x00, 0x00, 0x00,
    0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc2, 0x00, 0x00, 0x60, 0x00, 0x03, 0x00, 0x00, 0xc0, 0x00,
    0x03, 0x80, 0x00, 0x80, 0x00, 0x01, 0x80, 0x30, 0x00, 0x00, 0x08, 0xc0, 0x30, 0x08, 0x01, 0x04,
    0xc0, 0x30, 0x18, 0x01, 0x84, 0xc0, 0x66, 0x18, 0x01, 0x84, 0x60, 0x64, 0x38, 0x01, 0xc0, 0x60,
    0x64, 0x3c, 0x03, 0xc0, 0x60, 0x64, 0x3c, 0x03, 0xc0, 0x60, 0x60, 0x3f, 0x0f, 0xc0, 0x60, 0x60,
    0x3f, 0xff, 0xc2, 0x60, 0x60, 0x3f, 0xff, 0xc2, 0x60, 0x66, 0x1f, 0xff, 0x86, 0x60, 0x32, 0x1f,
    0xff, 0x80, 0xc0, 0x32, 0x0f, 0xff, 0x00, 0xc0, 0x30, 0x07, 0xfe, 0x00, 0xc0, 0x18, 0x01, 0xf8,
    0x00, 0x00, 0x1c, 0x00, 0x00, 0x30, 0x00, 0x0c, 0x20, 0x00, 0x60, 0x00, 0x04, 0x30, 0x00, 0x40,
    0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x38, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00,
    0x00, 0x1c, 0x03, 0xe0, 0x00, 0x00, 0x1f, 0xff, 0x80, 0x00, 0x00, 0x03, 0xfc, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00};
// 'look_10', 36x36px
const unsigned char look10[] PROGMEM = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xfc, 0x00, 0x00, 0x00, 0x01, 0xff, 0x80, 0x00, 0x00,
    0x00, 0x03, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0x03, 0x81, 0xc0, 0x3c, 0x00, 0x07, 0x00,
    0x03, 0x0e, 0x00, 0x06, 0x00, 0x00, 0xc6, 0x00, 0x0c, 0x60, 0x00, 0x02, 0x00, 0x1c, 0xc0, 0x00,
    0x00, 0x00, 0x18, 0x81, 0xf8, 0x00, 0x00, 0x30, 0x07, 0xfe, 0x08, 0x00, 0x30, 0x0f, 0xff, 0x04,
    0x00, 0x30, 0x1f, 0x0f, 0x84, 0x00, 0x66, 0x1c, 0x03, 0x84, 0x00, 0x64, 0x3c, 0x03, 0xc0, 0x60,
    0x64, 0x38, 0x01, 0xc0, 0x60, 0x64, 0x38, 0x01, 0xc0, 0x60, 0x60, 0x38, 0x01, 0xc0, 0x60, 0x60,
    0x38, 0x01, 0xc2, 0x60, 0x60, 0x3c, 0x03, 0xc2, 0x60, 0x06, 0x1c, 0x03, 0x86, 0x60, 0x02, 0x1f,
    0x0f, 0x80, 0xc0, 0x02, 0x0f, 0xff, 0x00, 0xc0, 0x00, 0x07, 0xfe, 0x00, 0xc0, 0x00, 0x01, 0xf8,
    0x01, 0x80, 0x00, 0x00, 0x00, 0x33, 0x80, 0x04, 0x20, 0x00, 0x63, 0x00, 0x06, 0x30, 0x00, 0x46,
    0x00, 0x07, 0x08, 0x00, 0x0e, 0x00, 0x03, 0xc0, 0x78, 0x1c, 0x00, 0x00, 0xe0, 0x00, 0x00, 0x00,
    0x00, 0x7c, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xf8, 0x00, 0x00, 0x00, 0x03, 0xf8, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00};

//==============SCAN ANIMATION=====================

// 'scan_1', 36x36px
const unsigned char scan1[] PROGMEM = {
    0x00, 0x00, 0xf0, 0x00, 0x00, 0x00, 0x01, 0xf8, 0x00, 0x00, 0x7f, 0xfc, 0x03, 0xff, 0xe0, 0x7f,
    0xf8, 0x01, 0xff, 0xe0, 0x00, 0x06, 0x06, 0x00, 0x00, 0x00, 0x07, 0xfe, 0x00, 0x00, 0x00, 0x03,
    0xfc, 0x00, 0x00, 0x00, 0x01, 0xf8, 0x00, 0x00, 0x00, 0x1f, 0xff, 0x80, 0x00, 0x00, 0x1f, 0xff,
    0x80, 0x00, 0x00, 0x3f, 0x0f, 0xc0, 0x00, 0x00, 0x3f, 0x0f, 0xc0, 0x00, 0x00, 0x7f, 0x0f, 0xe0,
    0x00, 0x00, 0x7f, 0xff, 0xe0, 0x00, 0x00, 0x7f, 0xff, 0xe0, 0x00, 0x00, 0xff, 0xff, 0xf0, 0x00,
    0x00, 0xf3, 0xfc, 0xf0, 0x00, 0x00, 0x73, 0xfc, 0xe0, 0x00, 0x00, 0x73, 0xfc, 0xe0, 0x00, 0x00,
    0x77, 0xfe, 0xe0, 0x00, 0x00, 0x7f, 0xff, 0xe0, 0x00, 0x00, 0x3f, 0xff, 0xc0, 0x00, 0x00, 0x37,
    0xfe, 0xc0, 0x00, 0x00, 0x07, 0xfe, 0x00, 0x00, 0x00, 0x07, 0x9e, 0x00, 0x00, 0x00, 0x07, 0x0e,
    0x00, 0x00, 0x00, 0x07, 0x0e, 0x00, 0x00, 0x00, 0x07, 0x0e, 0x00, 0x00, 0x00, 0x07, 0x0e, 0x00,
    0x00, 0x00, 0x07, 0x0e, 0x00, 0x00, 0x00, 0x07, 0x0e, 0x00, 0x00, 0x00, 0x07, 0x0e, 0x00, 0x00,
    0x00, 0x07, 0x0e, 0x00, 0x00, 0x00, 0x07, 0x0e, 0x00, 0x00, 0x00, 0x07, 0x0e, 0x00, 0x00, 0x00,
    0x07, 0x0e, 0x00, 0x00};
// 'scan_2', 36x36px
const unsigned char scan2[] PROGMEM = {
    0x00, 0x00, 0xf0, 0x00, 0x00, 0x00, 0x01, 0xf8, 0x00, 0x00, 0x00, 0x03, 0x0c, 0x00, 0x00, 0x00,
    0x06, 0x06, 0x00, 0x00, 0x00, 0x06, 0x06, 0x00, 0x00, 0x00, 0x07, 0xfe, 0x00, 0x00, 0x00, 0x03,
    0xfc, 0x00, 0x00, 0x00, 0x01, 0xf8, 0x00, 0x00, 0x00, 0x1f, 0xff, 0x80, 0x00, 0x00, 0x1f, 0xff,
    0x80, 0x00, 0x00, 0x3f, 0x0f, 0xc0, 0x00, 0x00, 0x3e, 0x0f, 0xc0, 0x00, 0x7f, 0x80, 0x00, 0x1f,
    0xe0, 0x7f, 0x80, 0x00, 0x1f, 0xe0, 0x00, 0x7f, 0xff, 0xe0, 0x00, 0x00, 0xff, 0xff, 0xf0, 0x00,
    0x00, 0xf3, 0xfc, 0xf0, 0x00, 0x00, 0x73, 0xfc, 0xe0, 0x00, 0x00, 0x73, 0xfc, 0xe0, 0x00, 0x00,
    0x77, 0xfe, 0xe0, 0x00, 0x00, 0x7f, 0xff, 0xe0, 0x00, 0x00, 0x3f, 0xff, 0xc0, 0x00, 0x00, 0x37,
    0xfe, 0xc0, 0x00, 0x00, 0x07, 0xfe, 0x00, 0x00, 0x00, 0x07, 0x9e, 0x00, 0x00, 0x00, 0x07, 0x0e,
    0x00, 0x00, 0x00, 0x07, 0x0e, 0x00, 0x00, 0x00, 0x07, 0x0e, 0x00, 0x00, 0x00, 0x07, 0x0e, 0x00,
    0x00, 0x00, 0x07, 0x0e, 0x00, 0x00, 0x00, 0x07, 0x0e, 0x00, 0x00, 0x00, 0x07, 0x0e, 0x00, 0x00,
    0x00, 0x07, 0x0e, 0x00, 0x00, 0x00, 0x07, 0x0e, 0x00, 0x00, 0x00, 0x07, 0x0e, 0x00, 0x00, 0x00,
    0x07, 0x0e, 0x00, 0x00};
// 'scan_3', 36x36px
const unsigned char scan3[] PROGMEM = {
    0x00, 0x00, 0xf0, 0x00, 0x00, 0x00, 0x01, 0xf8, 0x00, 0x00, 0x00, 0x03, 0x0c, 0x00, 0x00, 0x00,
    0x06, 0x06, 0x00, 0x00, 0x00, 0x06, 0x06, 0x00, 0x00, 0x00, 0x07, 0xfe, 0x00, 0x00, 0x00, 0x03,
    0xfc, 0x00, 0x00, 0x00, 0x01, 0xf8, 0x00, 0x00, 0x00, 0x1f, 0xff, 0x80, 0x00, 0x00, 0x1f, 0xff,
    0x80, 0x00, 0x00, 0x3f, 0x0f, 0xc0, 0x00, 0x00, 0x3f, 0x0f, 0xc0, 0x00, 0x00, 0x7f, 0x0f, 0xe0,
    0x00, 0x00, 0x7f, 0xff, 0xe0, 0x00, 0x00, 0x7f, 0xff, 0xe0, 0x00, 0x00, 0xff, 0xff, 0xf0, 0x00,
    0x00, 0xf3, 0xfc, 0xf0, 0x00, 0x00, 0x73, 0xfc, 0xe0, 0x00, 0x00, 0x73, 0xfc, 0xe0, 0x00, 0x00,
    0x77, 0xfe, 0xe0, 0x00, 0x00, 0x7f, 0xff, 0xe0, 0x00, 0x00, 0x7f, 0xff, 0xe0, 0x00, 0x7f, 0xc8,
    0x01, 0x3f, 0xe0, 0x7f, 0xf8, 0x01, 0xff, 0xe0, 0x00, 0x07, 0x9e, 0x00, 0x00, 0x00, 0x07, 0x0e,
    0x00, 0x00, 0x00, 0x07, 0x0e, 0x00, 0x00, 0x00, 0x07, 0x0e, 0x00, 0x00, 0x00, 0x07, 0x0e, 0x00,
    0x00, 0x00, 0x07, 0x0e, 0x00, 0x00, 0x00, 0x07, 0x0e, 0x00, 0x00, 0x00, 0x07, 0x0e, 0x00, 0x00,
    0x00, 0x07, 0x0e, 0x00, 0x00, 0x00, 0x07, 0x0e, 0x00, 0x00, 0x00, 0x07, 0x0e, 0x00, 0x00, 0x00,
    0x07, 0x0e, 0x00, 0x00};
// 'scan_4', 36x36px
const unsigned char scan4[] PROGMEM = {
    0x00, 0x00, 0xf0, 0x00, 0x00, 0x00, 0x01, 0xf8, 0x00, 0x00, 0x00, 0x03, 0x0c, 0x00, 0x00, 0x00,
    0x06, 0x06, 0x00, 0x00, 0x00, 0x06, 0x06, 0x00, 0x00, 0x00, 0x07, 0xfe, 0x00, 0x00, 0x00, 0x03,
    0xfc, 0x00, 0x00, 0x00, 0x01, 0xf8, 0x00, 0x00, 0x00, 0x1f, 0xff, 0x80, 0x00, 0x00, 0x1f, 0xff,
    0x80, 0x00, 0x00, 0x3f, 0x0f, 0xc0, 0x00, 0x00, 0x3f, 0x0f, 0xc0, 0x00, 0x00, 0x7f, 0x0f, 0xe0,
    0x00, 0x00, 0x7f, 0xff, 0xe0, 0x00, 0x00, 0x7f, 0xff, 0xe0, 0x00, 0x00, 0xff, 0xff, 0xf0, 0x00,
    0x00, 0xf3, 0xfc, 0xf0, 0x00, 0x00, 0x73, 0xfc, 0xe0, 0x00, 0x00, 0x73, 0xfc, 0xe0, 0x00, 0x00,
    0x77, 0xfe, 0xe0, 0x00, 0x00, 0x7f, 0xff, 0xe0, 0x00, 0x00, 0x3f, 0xff, 0xc0, 0x00, 0x00, 0x37,
    0xfe, 0xc0, 0x00, 0x00, 0x07, 0xfe, 0x00, 0x00, 0x00, 0x07, 0x9e, 0x00, 0x00, 0x00, 0x07, 0x0e,
    0x00, 0x00, 0x00, 0x07, 0x0e, 0x00, 0x00, 0x00, 0x07, 0x0e, 0x00, 0x00, 0x00, 0x07, 0x0e, 0x00,
    0x00, 0x00, 0x07, 0x0e, 0x00, 0x00, 0x00, 0x07, 0x0e, 0x00, 0x00, 0x00, 0x07, 0x0e, 0x00, 0x00,
    0x7f, 0xf8, 0x61, 0xff, 0xe0, 0x7f, 0xf8, 0x61, 0xff, 0xe0, 0x00, 0x07, 0x0e, 0x00, 0x00, 0x00,
    0x07, 0x0e, 0x00, 0x00};

//==============RECONITION ANIMATION=====================

// 'recon_1', 36x36px
const unsigned char recon1[] PROGMEM = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xe0, 0x00, 0x00, 0x00, 0x01, 0x30,
    0x03, 0xc0, 0x00, 0x02, 0x1f, 0xfe, 0x20, 0x00, 0x03, 0x10, 0x3c, 0x20, 0x00, 0x01, 0xf0, 0x06,
    0x60, 0x00, 0x00, 0xf8, 0x03, 0xc0, 0x00, 0x00, 0x7c, 0x00, 0x80, 0x00, 0x00, 0x56, 0x00, 0x80,
    0x00, 0x00, 0x59, 0x00, 0x80, 0x00, 0x00, 0x48, 0x80, 0x80, 0x00, 0x00, 0x28, 0x40, 0x80, 0x00,
    0x00, 0x6c, 0x20, 0x80, 0x00, 0x00, 0xfc, 0x10, 0x80, 0x00, 0x00, 0x8c, 0x08, 0x80, 0x00, 0x00,
    0x8e, 0x04, 0x80, 0x00, 0x00, 0x8f, 0x03, 0xe0, 0x00, 0x00, 0x73, 0xf3, 0x30, 0x00, 0x00, 0x01,
    0x1e, 0x10, 0x00, 0x00, 0x01, 0x03, 0x10, 0x00, 0x00, 0x01, 0x83, 0xa0, 0x00, 0x00, 0x00, 0xc6,
    0xc0, 0x00, 0x00, 0x01, 0xf8, 0x00, 0x00, 0x00, 0x01, 0x10, 0x00, 0x00, 0x00, 0x01, 0x10, 0x00,
    0x00, 0x00, 0x01, 0x10, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00};
// 'recon_2', 36x36px
const unsigned char recon2[] PROGMEM = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e,
    0x00, 0x00, 0x00, 0x00, 0x1b, 0x00, 0x00, 0x00, 0x70, 0x11, 0x00, 0x00, 0x00, 0x89, 0xf1, 0x00,
    0x00, 0x00, 0x8f, 0x19, 0x00, 0x00, 0x00, 0x8c, 0x0f, 0x00, 0x00, 0x00, 0xfb, 0x01, 0x00, 0x00,
    0x00, 0x78, 0xe1, 0x80, 0x00, 0x00, 0x48, 0x38, 0x80, 0x00, 0x00, 0x48, 0x0e, 0xf8, 0x00, 0x00,
    0xc4, 0x03, 0x88, 0x00, 0x03, 0xe4, 0x01, 0x88, 0x00, 0x02, 0x3f, 0xff, 0x88, 0x00, 0x02, 0x3b,
    0x00, 0xf8, 0x00, 0x02, 0x21, 0x01, 0x00, 0x00, 0x01, 0xc1, 0x06, 0x00, 0x00, 0x00, 0x00, 0xcc,
    0x00, 0x00, 0x00, 0x01, 0xf8, 0x00, 0x00, 0x00, 0x01, 0x10, 0x00, 0x00, 0x00, 0x01, 0x10, 0x00,
    0x00, 0x00, 0x01, 0x10, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00};
// 'recon_3', 36x36px
const unsigned char recon3[] PROGMEM = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x00, 0x1b, 0x00, 0x00, 0x00, 0x00,
    0x11, 0x00, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 0x00, 0x19, 0x00, 0x00, 0x00, 0x00, 0x7f,
    0x00, 0x00, 0x00, 0x01, 0xc0, 0x80, 0x00, 0x00, 0x7f, 0x00, 0x40, 0x00, 0x00, 0x8c, 0x00, 0x20,
    0x00, 0x00, 0x8e, 0x00, 0x10, 0x00, 0x00, 0x8b, 0xf0, 0x0f, 0xc0, 0x00, 0xf8, 0x1f, 0x84, 0x40,
    0x00, 0x6c, 0x00, 0x7c, 0x40, 0x00, 0x46, 0x00, 0x04, 0x40, 0x00, 0x42, 0x00, 0x1f, 0xc0, 0x00,
    0x41, 0x00, 0xe2, 0x00, 0x00, 0x41, 0x83, 0x84, 0x00, 0x00, 0x80, 0xdc, 0x0c, 0x00, 0x00, 0x80,
    0xf0, 0x08, 0x00, 0x00, 0x83, 0xa0, 0x18, 0x00, 0x03, 0xfc, 0x10, 0x10, 0x00, 0x02, 0x30, 0x18,
    0x30, 0x00, 0x02, 0x20, 0x0c, 0x20, 0x00, 0x02, 0x20, 0x06, 0xc0, 0x00, 0x01, 0xc0, 0x03, 0xe0,
    0x00, 0x00, 0x00, 0x02, 0x20, 0x00, 0x00, 0x00, 0x02, 0x20, 0x00, 0x00, 0x00, 0x02, 0x20, 0x00,
    0x00, 0x00, 0x01, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00};
// 'recon_4', 36x36px
const unsigned char recon4[] PROGMEM = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x07, 0x80, 0x00, 0x00, 0x00, 0x08, 0x80, 0x00, 0x00, 0x00, 0x08, 0xc0, 0x00, 0x00, 0x00, 0x08,
    0x80, 0x00, 0x00, 0x00, 0x0f, 0x80, 0x00, 0x00, 0x00, 0x19, 0x00, 0x1e, 0x00, 0x00, 0x10, 0x80,
    0x22, 0x00, 0x00, 0x20, 0x80, 0xe3, 0x00, 0x03, 0xc0, 0x7f, 0xa2, 0x00, 0x04, 0xc7, 0xe0, 0x1e,
    0x00, 0x04, 0x78, 0x20, 0x08, 0x00, 0x04, 0x40, 0x20, 0x18, 0x00, 0x06, 0xc0, 0x30, 0x10, 0x00,
    0x03, 0xe0, 0x10, 0x10, 0x00, 0x01, 0x10, 0x18, 0x10, 0x00, 0x01, 0x08, 0x08, 0x10, 0x00, 0x01,
    0x06, 0x0c, 0x10, 0x00, 0x01, 0x03, 0x04, 0x30, 0x00, 0x01, 0x01, 0x84, 0x20, 0x00, 0x01, 0x00,
    0xc2, 0x20, 0x00, 0x01, 0x00, 0x62, 0x20, 0x00, 0x01, 0x80, 0x31, 0x20, 0x00, 0x02, 0x40, 0x09,
    0x20, 0x00, 0x04, 0x20, 0x04, 0xe0, 0x00, 0x04, 0x30, 0x03, 0xe0, 0x00, 0x02, 0x7f, 0xe1, 0x10,
    0x00, 0x01, 0xc0, 0x3f, 0x10, 0x00, 0x00, 0x00, 0x01, 0x10, 0x00, 0x00, 0x00, 0x01, 0xe0, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00};

//==============OXYGEN ANIMATION=====================

// 'o2_1', 36x36px
const unsigned char oxy1[] PROGMEM = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03,
    0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x3c, 0x00, 0x03, 0x00,
    0x00, 0x04, 0x00, 0x07, 0x80, 0x00, 0x0c, 0x00, 0x03, 0x00, 0xf0, 0x0c, 0x00, 0x00, 0x07, 0x8e,
    0x18, 0x00, 0x00, 0x0c, 0x01, 0xbe, 0x00, 0x00, 0x30, 0x60, 0xc0, 0x00, 0x00, 0x21, 0xf8, 0x60,
    0x00, 0x00, 0x42, 0x04, 0x20, 0x00, 0x00, 0xc4, 0x02, 0x30, 0x00, 0x00, 0x8c, 0x03, 0x10, 0x00,
    0x00, 0x88, 0x01, 0x10, 0x00, 0x00, 0x88, 0x01, 0x10, 0x00, 0x01, 0x88, 0x01, 0x18, 0x00, 0x01,
    0x08, 0x01, 0x08, 0x00, 0x01, 0x08, 0x01, 0x18, 0x00, 0x01, 0x88, 0x01, 0x18, 0x00, 0x00, 0x88,
    0x01, 0x10, 0x00, 0x00, 0x88, 0x01, 0x10, 0x00, 0x00, 0xfc, 0x03, 0xf0, 0x00, 0x00, 0xfc, 0x03,
    0xe0, 0x00, 0x00, 0x7e, 0x07, 0xe0, 0x00, 0x00, 0x3f, 0xff, 0xc0, 0x00, 0x00, 0x3f, 0xff, 0x80,
    0x00, 0x00, 0x0f, 0xff, 0x00, 0x00, 0x00, 0x07, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00};
// 'o2_2', 36x36px
const unsigned char oxy2[] PROGMEM = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x00,
    0x00, 0x04, 0x00, 0x03, 0x00, 0x00, 0x0c, 0x00, 0x03, 0x00, 0xf0, 0x0c, 0x00, 0x03, 0x07, 0x8e,
    0x18, 0x00, 0x03, 0x0c, 0x01, 0xbe, 0x00, 0x07, 0xb0, 0x60, 0xc0, 0x00, 0x03, 0x21, 0xf8, 0x60,
    0x00, 0x00, 0x42, 0x04, 0x20, 0x00, 0x00, 0xc4, 0x02, 0x30, 0x00, 0x00, 0x8c, 0x03, 0x10, 0x00,
    0x00, 0x88, 0x01, 0x10, 0x00, 0x00, 0x88, 0x01, 0x10, 0x00, 0x01, 0x88, 0x01, 0x18, 0x00, 0x01,
    0x08, 0x01, 0x08, 0x00, 0x01, 0x08, 0x01, 0x18, 0x00, 0x01, 0x88, 0x01, 0x18, 0x00, 0x00, 0x88,
    0x01, 0x10, 0x00, 0x00, 0x88, 0x01, 0x10, 0x00, 0x00, 0x8c, 0x03, 0x10, 0x00, 0x00, 0xc4, 0x02,
    0x20, 0x00, 0x00, 0x42, 0x04, 0x20, 0x00, 0x00, 0x21, 0xf8, 0x40, 0x00, 0x00, 0x30, 0x00, 0x80,
    0x00, 0x00, 0x0c, 0x03, 0x00, 0x00, 0x00, 0x07, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00};

//==============HEART ANIMATION=================

// 'heart_1', 36x36px
const unsigned char heart1[] PROGMEM = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x9e, 0x00, 0x00, 0x00, 0x0f, 0xff, 0x00,
    0x00, 0x00, 0x1f, 0xff, 0x80, 0x00, 0x00, 0x1f, 0xdf, 0x80, 0x00, 0x00, 0x3f, 0xdf, 0xc0, 0x00,
    0x00, 0x3f, 0xdf, 0xc0, 0x00, 0x0f, 0xc0, 0x9f, 0xc0, 0x00, 0x00, 0x1e, 0x20, 0x7f, 0x00, 0x00,
    0x1f, 0x3f, 0x80, 0x00, 0x00, 0x0f, 0x3f, 0x00, 0x00, 0x00, 0x07, 0xbe, 0x00, 0x00, 0x00, 0x03,
    0xfc, 0x00, 0x00, 0x00, 0x01, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00};
// 'heart_2', 36x36px
const unsigned char heart2[] PROGMEM = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x3f, 0x9f, 0xc0, 0x00, 0x00, 0xc0, 0x00, 0x30, 0x00, 0x00, 0x80, 0x00,
    0x10, 0x00, 0x01, 0x00, 0x00, 0x08, 0x00, 0x03, 0x07, 0x9e, 0x0c, 0x00, 0x02, 0x0f, 0xff, 0x04,
    0x00, 0x02, 0x1f, 0xff, 0x84, 0x00, 0x02, 0x1f, 0xdf, 0x84, 0x00, 0x02, 0x3f, 0xdf, 0xc4, 0x00,
    0x00, 0x3f, 0xdf, 0xc0, 0x00, 0x0f, 0xc0, 0x9f, 0xc0, 0x00, 0x00, 0x1e, 0x20, 0x7f, 0x00, 0x00,
    0x1f, 0x3f, 0x80, 0x00, 0x01, 0x0f, 0x3f, 0x08, 0x00, 0x00, 0x87, 0xbe, 0x18, 0x00, 0x00, 0xc3,
    0xfc, 0x30, 0x00, 0x00, 0x61, 0xf8, 0x60, 0x00, 0x00, 0x30, 0x60, 0xc0, 0x00, 0x00, 0x18, 0x01,
    0x80, 0x00, 0x00, 0x06, 0x06, 0x00, 0x00, 0x00, 0x03, 0x9c, 0x00, 0x00, 0x00, 0x00, 0xb0, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00};

//=================BLINK EYE=================

// 'blink_1', 36x36px
const unsigned char blink1[] PROGMEM = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x80, 0x00, 0x00,
    0x70, 0x03, 0xe0, 0x00, 0x00, 0xe0, 0x00, 0x70, 0x00, 0x03, 0xc1, 0xc0, 0x3c, 0x00, 0x07, 0x00,
    0x03, 0x0e, 0x00, 0x06, 0x00, 0x00, 0xc6, 0x00, 0x0c, 0x60, 0x00, 0x03, 0x00, 0x1c, 0xc0, 0x00,
    0x03, 0x80, 0x18, 0x81, 0xf8, 0x01, 0x80, 0x30, 0x07, 0xfe, 0x08, 0x80, 0x30, 0x0f, 0xff, 0x04,
    0x00, 0x30, 0x1f, 0x0f, 0x84, 0x00, 0x66, 0x1c, 0x03, 0x84, 0x00, 0x64, 0x3c, 0x03, 0xc0, 0x00,
    0x64, 0x38, 0x01, 0xc0, 0x00, 0x64, 0x38, 0x01, 0xc0, 0x00, 0x00, 0x38, 0x01, 0xc0, 0x60, 0x00,
    0x38, 0x01, 0xc2, 0x60, 0x00, 0x3c, 0x03, 0xc2, 0x60, 0x06, 0x1c, 0x03, 0x86, 0x60, 0x02, 0x1f,
    0x0f, 0x80, 0xc0, 0x02, 0x0f, 0xff, 0x00, 0xc0, 0x10, 0x07, 0xfe, 0x00, 0xc0, 0x18, 0x01, 0xf8,
    0x01, 0x80, 0x1c, 0x00, 0x00, 0x33, 0x80, 0x0c, 0x20, 0x00, 0x63, 0x00, 0x06, 0x30, 0x00, 0x46,
    0x00, 0x07, 0x08, 0x00, 0x0e, 0x00, 0x03, 0xc0, 0x78, 0x3c, 0x00, 0x00, 0xe0, 0x00, 0x70, 0x00,
    0x00, 0x7c, 0x00, 0xe0, 0x00, 0x00, 0x1f, 0xc0, 0x00, 0x00, 0x00, 0x03, 0xc0, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00};
// 'blink_2', 36x36px
const unsigned char blink2[] PROGMEM = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x80, 0x00, 0x00,
    0x70, 0x03, 0xe0, 0x00, 0x00, 0xe0, 0x00, 0x70, 0x00, 0x03, 0xc1, 0xc0, 0x3c, 0x00, 0x07, 0x00,
    0x03, 0x0e, 0x00, 0x06, 0x00, 0x00, 0xc6, 0x00, 0x0c, 0x60, 0x00, 0x03, 0x00, 0x1c, 0xc0, 0x00,
    0x03, 0x80, 0x18, 0x81, 0xf8, 0x01, 0x80, 0x30, 0x07, 0xfe, 0x08, 0x80, 0x30, 0x0f, 0xff, 0x04,
    0x00, 0x30, 0x1f, 0xff, 0x84, 0x00, 0x66, 0x1f, 0xff, 0x84, 0x00, 0x64, 0x3f, 0xff, 0xc0, 0x00,
    0x64, 0x3e, 0x07, 0xc0, 0x00, 0x64, 0x38, 0x01, 0xc0, 0x00, 0x00, 0x38, 0x01, 0xc0, 0x60, 0x00,
    0x3e, 0x07, 0xc2, 0x60, 0x00, 0x3f, 0xff, 0xc2, 0x60, 0x06, 0x1f, 0xff, 0x86, 0x60, 0x02, 0x1f,
    0xff, 0x80, 0xc0, 0x02, 0x0f, 0xff, 0x00, 0xc0, 0x10, 0x07, 0xfe, 0x00, 0xc0, 0x18, 0x01, 0xf8,
    0x01, 0x80, 0x1c, 0x00, 0x00, 0x33, 0x80, 0x0c, 0x20, 0x00, 0x63, 0x00, 0x06, 0x30, 0x00, 0x46,
    0x00, 0x07, 0x08, 0x00, 0x0e, 0x00, 0x03, 0xc0, 0x78, 0x3c, 0x00, 0x00, 0xe0, 0x00, 0x70, 0x00,
    0x00, 0x7c, 0x00, 0xe0, 0x00, 0x00, 0x1f, 0xc0, 0x00, 0x00, 0x00, 0x03, 0xc0, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00};
// 'blink_3', 36x36px
const unsigned char blink3[] PROGMEM = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x80, 0x00, 0x00,
    0x70, 0x03, 0xe0, 0x00, 0x00, 0xe0, 0x00, 0x70, 0x00, 0x03, 0xc1, 0xc0, 0x3c, 0x00, 0x07, 0x00,
    0x03, 0x0e, 0x00, 0x06, 0x00, 0x00, 0xc6, 0x00, 0x0c, 0x60, 0x00, 0x03, 0x00, 0x1c, 0xc0, 0x00,
    0x03, 0x80, 0x18, 0x81, 0xf8, 0x01, 0x80, 0x30, 0x07, 0xfe, 0x08, 0x80, 0x30, 0x0f, 0xff, 0x04,
    0x00, 0x30, 0x1f, 0xff, 0x84, 0x00, 0x66, 0x1f, 0xff, 0x84, 0x00, 0x64, 0x3f, 0xff, 0xc0, 0x00,
    0x64, 0x3f, 0xff, 0xc0, 0x00, 0x64, 0x3f, 0xff, 0xc0, 0x00, 0x00, 0x38, 0x01, 0xc0, 0x60, 0x00,
    0x3f, 0xff, 0xc2, 0x60, 0x00, 0x3f, 0xff, 0xc2, 0x60, 0x06, 0x1f, 0xff, 0x86, 0x60, 0x02, 0x1f,
    0xff, 0x80, 0xc0, 0x02, 0x0f, 0xff, 0x00, 0xc0, 0x10, 0x07, 0xfe, 0x00, 0xc0, 0x18, 0x01, 0xf8,
    0x01, 0x80, 0x1c, 0x00, 0x00, 0x33, 0x80, 0x0c, 0x20, 0x00, 0x63, 0x00, 0x06, 0x30, 0x00, 0x46,
    0x00, 0x07, 0x08, 0x00, 0x0e, 0x00, 0x03, 0xc0, 0x78, 0x3c, 0x00, 0x00, 0xe0, 0x00, 0x70, 0x00,
    0x00, 0x7c, 0x00, 0xe0, 0x00, 0x00, 0x1f, 0xc0, 0x00, 0x00, 0x00, 0x03, 0xc0, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00};

//===============BATTERY ANIMATION==============

// 'batt_1', 36x36px
const unsigned char batt1[] PROGMEM = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0xf0, 0x00, 0x00, 0x00, 0x01, 0xf8, 0x00, 0x00, 0x00, 0x01, 0xf8, 0x00, 0x00, 0x00, 0x03,
    0xfc, 0x00, 0x00, 0x00, 0x07, 0xfe, 0x00, 0x00, 0x00, 0x04, 0x02, 0x00, 0x00, 0x00, 0x04, 0x02,
    0x00, 0x00, 0x00, 0x05, 0xfa, 0x00, 0x00, 0x00, 0x04, 0x02, 0x00, 0x00, 0x00, 0x04, 0x02, 0x00,
    0x00, 0x00, 0x04, 0x02, 0x00, 0x00, 0x00, 0x05, 0xfa, 0x00, 0x00, 0x00, 0x04, 0x02, 0x00, 0x00,
    0x00, 0x04, 0x02, 0x00, 0x00, 0x00, 0x04, 0x02, 0x00, 0x00, 0x00, 0x05, 0xfa, 0x00, 0x00, 0x00,
    0x04, 0x02, 0x00, 0x00, 0x00, 0x04, 0x02, 0x00, 0x00, 0x00, 0x04, 0x02, 0x00, 0x00, 0x00, 0x05,
    0xfa, 0x00, 0x00, 0x00, 0x04, 0x02, 0x00, 0x00, 0x00, 0x04, 0x02, 0x00, 0x00, 0x00, 0x05, 0xfa,
    0x00, 0x00, 0x00, 0x05, 0xfa, 0x00, 0x00, 0x00, 0x05, 0xfa, 0x00, 0x00, 0x00, 0x05, 0xfa, 0x00,
    0x00, 0x00, 0x04, 0x02, 0x00, 0x00, 0x00, 0x06, 0x06, 0x00, 0x00, 0x00, 0x07, 0xfe, 0x00, 0x00,
    0x00, 0x03, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00};
// 'batt_2', 36x36px
const unsigned char batt2[] PROGMEM = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0xf0, 0x00, 0x00, 0x00, 0x01, 0xf8, 0x00, 0x00, 0x00, 0x01, 0xf8, 0x00, 0x00, 0x00, 0x03,
    0xfc, 0x00, 0x00, 0x00, 0x07, 0xfe, 0x00, 0x00, 0x00, 0x04, 0x02, 0x00, 0x00, 0x00, 0x04, 0x02,
    0x00, 0x00, 0x00, 0x05, 0xfa, 0x00, 0x00, 0x00, 0x04, 0x02, 0x00, 0x00, 0x00, 0x04, 0x02, 0x00,
    0x00, 0x00, 0x04, 0x02, 0x00, 0x00, 0x00, 0x05, 0xfa, 0x00, 0x00, 0x00, 0x04, 0x02, 0x00, 0x00,
    0x00, 0x04, 0x02, 0x00, 0x00, 0x00, 0x04, 0x02, 0x00, 0x00, 0x00, 0x05, 0xfa, 0x00, 0x00, 0x00,
    0x04, 0x02, 0x00, 0x00, 0x00, 0x04, 0x02, 0x00, 0x00, 0x00, 0x04, 0x02, 0x00, 0x00, 0x00, 0x05,
    0xfa, 0x00, 0x00, 0x00, 0x04, 0x02, 0x00, 0x00, 0x00, 0x04, 0x02, 0x00, 0x00, 0x00, 0x04, 0x02,
    0x00, 0x00, 0x00, 0x04, 0x02, 0x00, 0x00, 0x00, 0x04, 0x02, 0x00, 0x00, 0x00, 0x04, 0x02, 0x00,
    0x00, 0x00, 0x04, 0x02, 0x00, 0x00, 0x00, 0x06, 0x06, 0x00, 0x00, 0x00, 0x07, 0xfe, 0x00, 0x00,
    0x00, 0x03, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00};

//==================LINK ANIMATION======================

// 'link_1', 36x36px
const unsigned char link1[] PROGMEM = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xf8, 0x00,
    0x00, 0x00, 0x03, 0x0c, 0x00, 0x00, 0x00, 0x04, 0x02, 0x00, 0x00, 0x18, 0x0c, 0x03, 0x00, 0x00,
    0x64, 0x08, 0x01, 0xff, 0xf0, 0xc2, 0x08, 0x01, 0xff, 0xf0, 0xc2, 0x08, 0x01, 0xff, 0xf0, 0xe4,
    0x08, 0x01, 0xff, 0xf0, 0x18, 0x0c, 0x03, 0x00, 0x00, 0x00, 0x04, 0x02, 0x00, 0x00, 0x00, 0x03,
    0x0c, 0x00, 0x00, 0x00, 0x01, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00};
// 'link_2', 36x36px
const unsigned char link2[] PROGMEM = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xf8, 0x00,
    0x00, 0x00, 0x03, 0x0c, 0x00, 0x00, 0x00, 0x04, 0x02, 0x00, 0x00, 0x01, 0x8c, 0x03, 0x00, 0x00,
    0xfe, 0x48, 0x01, 0xff, 0xf0, 0xfc, 0x28, 0x01, 0xff, 0xf0, 0xfc, 0x28, 0x01, 0xff, 0xf0, 0xfe,
    0x48, 0x01, 0xff, 0xf0, 0x01, 0x8c, 0x03, 0x00, 0x00, 0x00, 0x04, 0x02, 0x00, 0x00, 0x00, 0x03,
    0x0c, 0x00, 0x00, 0x00, 0x01, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00};
// 'link_3', 36x36px
const unsigned char link3[] PROGMEM = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xf8, 0x00,
    0x00, 0x00, 0x03, 0x0c, 0x00, 0x00, 0x00, 0x04, 0x02, 0x00, 0x00, 0x00, 0x0c, 0x63, 0x00, 0x00,
    0x7f, 0xff, 0x91, 0xff, 0xf0, 0xff, 0xff, 0x09, 0xff, 0xf0, 0xff, 0xff, 0x09, 0xff, 0xf0, 0xff,
    0xff, 0x91, 0xff, 0xf0, 0x00, 0x0c, 0x63, 0x00, 0x00, 0x00, 0x04, 0x02, 0x00, 0x00, 0x00, 0x03,
    0x0c, 0x00, 0x00, 0x00, 0x01, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00};
// 'link_4', 36x36px
const unsigned char link4[] PROGMEM = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xf8, 0x00,
    0x00, 0x00, 0x03, 0x0c, 0x00, 0x00, 0x00, 0x04, 0x02, 0x00, 0x00, 0x00, 0x0c, 0x63, 0x00, 0x00,
    0x3f, 0xff, 0x91, 0xff, 0xc0, 0x3f, 0xff, 0x09, 0xff, 0xc0, 0x3f, 0xff, 0x09, 0xff, 0xc0, 0x3f,
    0xff, 0x91, 0xff, 0xc0, 0x00, 0x0c, 0x63, 0x00, 0x00, 0x00, 0x04, 0x02, 0x00, 0x00, 0x00, 0x03,
    0x0c, 0x00, 0x00, 0x00, 0x01, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00};
// 'link_5', 36x36px
const unsigned char link5[] PROGMEM = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xf8, 0x00,
    0x00, 0x00, 0x03, 0x0c, 0x00, 0x00, 0x00, 0x04, 0x02, 0x00, 0x00, 0x00, 0x0c, 0x63, 0x00, 0x00,
    0x67, 0xff, 0x91, 0xfe, 0x70, 0xe7, 0xff, 0x09, 0xfe, 0x70, 0xe7, 0xff, 0x09, 0xfe, 0x70, 0xe7,
    0xff, 0x91, 0xfe, 0x70, 0x00, 0x0c, 0x63, 0x00, 0x00, 0x00, 0x04, 0x02, 0x00, 0x00, 0x00, 0x03,
    0x0c, 0x00, 0x00, 0x00, 0x01, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00};
// 'link_6', 36x36px
const unsigned char link6[] PROGMEM = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xf8, 0x00,
    0x00, 0x00, 0x03, 0x0c, 0x00, 0x00, 0x00, 0x04, 0x02, 0x00, 0x00, 0x00, 0x0c, 0x63, 0x00, 0x00,
    0x7f, 0x3f, 0x91, 0xcf, 0xf0, 0xff, 0x3f, 0x09, 0xcf, 0xf0, 0xff, 0x3f, 0x09, 0xcf, 0xf0, 0xff,
    0x3f, 0x91, 0xcf, 0xf0, 0x00, 0x0c, 0x63, 0x00, 0x00, 0x00, 0x04, 0x02, 0x00, 0x00, 0x00, 0x03,
    0x0c, 0x00, 0x00, 0x00, 0x01, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00};
// 'link_7', 36x36px
const unsigned char link7[] PROGMEM = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xf8, 0x00,
    0x00, 0x00, 0x03, 0x0c, 0x00, 0x00, 0x00, 0x04, 0x02, 0x00, 0x00, 0x00, 0x0c, 0x63, 0x00, 0x00,
    0x7f, 0xfc, 0x91, 0xff, 0xf0, 0xff, 0xfd, 0x08, 0xff, 0xf0, 0xff, 0xfd, 0x08, 0xff, 0xf0, 0xff,
    0xfc, 0x91, 0xff, 0xf0, 0x00, 0x0c, 0x63, 0x00, 0x00, 0x00, 0x04, 0x02, 0x00, 0x00, 0x00, 0x03,
    0x0c, 0x00, 0x00, 0x00, 0x01, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00};

//======= MILLIS Animation ...........................................
const unsigned long period = 50; // Delay between animation frames
unsigned long time_now = 0;      // Tracking millis time
unsigned long previousTime = 0;

#define MotorSpeed_L 2 //Blue PWM LEFT
#define MotorDir_L 26  //Red Direction LEFT
#define MotorDir_R 27  //Yellow Direction RIGHT
#define MotorSpeed_R 3 //Orange PWM RIGHT
int SpeedVal_R = 0;
int SpeedVal_L = 0;

PS2X ps2x;
// twelve servo objects can be created on most boards
// create servo object to control a servo

Servo servoBase; // This servo makes rotate the structure / Arm / or Neck
Servo servo01;
Servo servo02;
Servo servoHead;
Servo servoDoor;

byte initalServoDoor;
byte initalServoHead;
byte initalServoBase;
byte initalServo01;
byte initalServo02;

int headState = 6;
int servoBaseAddress = 7;
int servo01Address = 8;
int servo02Address = 9;
int servoHeadAddress = 10;
int servoDoorAddress = 11;

// Relay and lights control
int ledgreen = 28; // Green
int ledred = 29;   // Red
int ledwhite = 30; // White
//===Relay Green Light
bool greenlampsState = false;
//===Relay Red Light
bool redlampsState = false;
//===Relay White Light
bool whitelampsState = false;
unsigned long lightPressedTime = 0;

int a = 2000;

// variable to store the servo position
int posBase = 90;
int pos01 = 90;    // 180 = Vertical, 90 = Front, 38 = MAX LOW POSITION <<WARNING this is a very strong servo and it could brake other stuffs.>>
int pos02 = 147;   // 5 = Vertical, 90 = Front, 145 = MAX LOW POSITION
int posHead = 90;  // 0= Left, 90 = Front, 180 = Right
int posDoor = 180; // 180 = Vertical, 90 = Horizontal, 0 = Maybe you'll brake the flag lol
bool buttonPressed = false;
bool circlePressed = false;

unsigned long posStart = 0;
unsigned long circlePressedTime = 0;
unsigned long lastReadGamepad = 0;
unsigned long gamepadReadDelay = 50;

int error = 0;
byte vibrate = 0;
bool LED_OUTPUT = false;

void setup()
{
  Serial.begin(57600);
  delay(3000);
  // error = ps2x.config_gamepad(13, 3, 12, 8, true, true); //GamePad(clock, command, attention, data, Pressures?, Rumble?)
  error = ps2x.config_gamepad(22, 23, 24, 25, true, true); //GamePad(clock, command, attention, data, Pressures?, Rumble?)
  Serial.println(error);
  // servoBase.attach(5);  // attaches the servo on pin 5 to the servo object
  // servo01.attach(6);    // Pin 6
  // servo02.attach(9);    // Pin 9
  // servoHead.attach(10); // Pin 10
  // servoDoor.attach(11); // Pin 11
  servoBase.attach(7); // attaches the servo on pin 5 to the servo object
  servo01.attach(6);   // Pin 6
  servo02.attach(5);   // Pin 5
  servoHead.attach(4); // Pin 4
  servoDoor.attach(8); // Pin 11
  int servoHeadValue = EEPROM.read(servoHeadAddress);
  int servo01Value = EEPROM.read(servo01Address);
  int servo02Value = EEPROM.read(servo02Address);
  int servoDoorValue = EEPROM.read(servoDoorAddress);
  int servoBaseValue = EEPROM.read(servoBaseAddress);
  servoDoor.write(servoDoorValue);
  servoBase.write(servoBaseValue);
  servo01.write(servo01Value);
  servo02.write(servo02Value);
  servoHead.write(servoHeadValue);
  // Motors Driver
  pinMode(MotorDir_L, OUTPUT);
  pinMode(MotorSpeed_L, OUTPUT);
  pinMode(MotorDir_R, OUTPUT);
  pinMode(MotorSpeed_R, OUTPUT);
  // Relay lights
  pinMode(ledgreen, OUTPUT);
  digitalWrite(ledgreen, LOW);
  pinMode(ledred, OUTPUT);
  digitalWrite(ledred, LOW);
  pinMode(ledwhite, OUTPUT);
  digitalWrite(ledwhite, LOW);

  //OLED Screen
  display.begin(SSD1306_SWITCHCAPVCC, 0x3c); //or 0x3C
  display.clearDisplay();                    //for Clearing the display
  //display.drawBitmap(0, 0, think, 128, 64, WHITE); // display.drawBitmap(x position, y position, bitmap data, bitmap width, bitmap height, color)
  //display.display();
  //display.clearDisplay(); //for Clearing the display
  display.setRotation(2); // ROTATE THE DISPLAY UPSIDE DOWN
}

void moveServoDirect(Servo servo, int servoAddress, int targetPos)
{
  if (targetPos > 180)
    targetPos = 180;
  else if (targetPos < 0)
    targetPos = 0;
  servo.write(targetPos);
  EEPROM.update(servoAddress, targetPos);
}

void moveServo(Servo servo, int servoAddress, byte currentPos, int startPos, int targetPos)
{
  int absDistance = abs(startPos - targetPos);
  bool inFirstQuarter = abs(currentPos - startPos) < absDistance / 4;
  bool inLastQuarter = abs(currentPos - startPos) > absDistance * 3 / 4;
  int isMovingPositive = 1;
  if (targetPos < startPos)
  {
    isMovingPositive = -1;
  }
  if (targetPos > startPos)
  {
    if (currentPos >= targetPos)
    {
      EEPROM.update(servoAddress, currentPos);
      return;
    }
  }
  else
  {
    if (currentPos <= targetPos)
    {
      EEPROM.update(servoAddress, currentPos);
      return;
    }
  }
  if (millis() % 4 == 0)
  {
    if (inFirstQuarter || inLastQuarter)
    {
      Serial.println("in edge quarter");
      int increment = 1 * isMovingPositive;
      servo.write(currentPos + increment);
      int endingPos = currentPos + increment;
      EEPROM.update(servoAddress, endingPos);
    }
    else
    {
      Serial.println("not in edge quarter");
      int increment = 3 * isMovingPositive;
      servo.write(currentPos + increment);
      int endingPos = currentPos + increment;
      EEPROM.update(servoAddress, endingPos);
    }
  }
}

void position01()
{
  if (posStart == 0)
  {
    initalServoDoor = EEPROM.read(servoDoorAddress);
    initalServoHead = EEPROM.read(servoHeadAddress);
    initalServoBase = EEPROM.read(servoBaseAddress);
    initalServo01 = EEPROM.read(servo01Address);
    initalServo02 = EEPROM.read(servo02Address);
    posStart = millis();
  }
  if (millis() < posStart + 2 * a)
  {
    // open the door
    moveServo(servoDoor, servoDoorAddress, EEPROM.read(servoDoorAddress), initalServoDoor, 56);
  }
  else if (millis() < posStart + 2 * a + 50)
  {
    initalServoDoor = EEPROM.read(servoDoorAddress);
  }
  else if (millis() < posStart + 4 * a)
  {
    // stash the head in the compartment
    moveServo(servoBase, servoBaseAddress, EEPROM.read(servoBaseAddress), initalServoBase, 84);
    moveServo(servo01, servo01Address, EEPROM.read(servo01Address), initalServo01, 30);
    moveServo(servo02, servo02Address, EEPROM.read(servo02Address), initalServo02, 110);
    moveServo(servoHead, servoHeadAddress, EEPROM.read(servoHeadAddress), initalServoHead, 90);
  }
  else if (millis() < posStart + 6 * a)
  {
    // close the door
    moveServo(servoDoor, servoDoorAddress, EEPROM.read(servoDoorAddress), initalServoDoor, 0);
  }
  else
  {
    Serial.println("Finished 1");
    EEPROM.update(headState, 1);
    posStart = 0;
  }
}

void position02()
{
  if (posStart == 0)
  {
    initalServoDoor = EEPROM.read(servoDoorAddress);
    initalServoHead = EEPROM.read(servoHeadAddress);
    initalServoBase = EEPROM.read(servoBaseAddress);
    initalServo01 = EEPROM.read(servo01Address);
    initalServo02 = EEPROM.read(servo02Address);
    posStart = millis();
  }
  if (millis() < posStart + 2 * a)
  {
    // open the door
    moveServo(servoDoor, servoDoorAddress, EEPROM.read(servoDoorAddress), initalServoDoor, 56);
  }
  else if (millis() < posStart + 2 * a + 50)
  {
    initalServoDoor = EEPROM.read(servoDoorAddress);
  }
  else if (millis() < posStart + 4 * a)
  {
    // move the head out of the compartment into position 2
    moveServo(servoBase, servoBaseAddress, EEPROM.read(servoBaseAddress), initalServoBase, 90);
    moveServo(servo01, servo01Address, EEPROM.read(servo01Address), initalServo01, 138);
    moveServo(servo02, servo02Address, EEPROM.read(servo02Address), initalServo02, 160);
    moveServo(servoHead, servoHeadAddress, EEPROM.read(servoHeadAddress), initalServoHead, 90);
  }
  else if (millis() < posStart + 4 * a + 50)
  {
    initalServoDoor = EEPROM.read(servoDoorAddress);
  }
  else if (millis() < posStart + 8 * a)
  {
    // close the door
    moveServo(servoDoor, servoDoorAddress, EEPROM.read(servoDoorAddress), initalServoDoor, 0);
  }
  else
  {
    Serial.println("Finished 2");
    EEPROM.update(headState, 2);
    posStart = 0;
  }
}

void position03()
{
  if (posStart == 0)
  {
    initalServoDoor = EEPROM.read(servoDoorAddress);
    initalServoHead = EEPROM.read(servoHeadAddress);
    initalServoBase = EEPROM.read(servoBaseAddress);
    initalServo01 = EEPROM.read(servo01Address);
    initalServo02 = EEPROM.read(servo02Address);
    posStart = millis();
    circlePressed = false;
    circlePressedTime = 0;
    Serial.println("Started 3");
  }

  if (millis() < posStart + 2 * a)
  {
    // move base to look left
    moveServo(servo02, servo02Address, EEPROM.read(servo02Address), initalServo02, 114);
    moveServo(servoBase, servoBaseAddress, EEPROM.read(servoBaseAddress), initalServoBase, 90);
  }
  else if (millis() < posStart + 2 * a + 50)
  {
    initalServoBase = EEPROM.read(servoBaseAddress);
  }
  else if (millis() < posStart + 4 * a)
  {
    //move base to look a bit right
    moveServo(servoBase, servoBaseAddress, EEPROM.read(servoBaseAddress), initalServoBase, 107);
  }
  else if (millis() < posStart + 4 * a + 50)
  {
    initalServoBase = EEPROM.read(servoBaseAddress);
  }
  else if (!circlePressed)
  {
    // control head with ps2 controller
    int x1Value = ps2x.Analog(PSS_RX);
    int y1Value = ps2x.Analog(PSS_LY);
    int x2Value = ps2x.Analog(PSS_LX);
    int y2Value = ps2x.Analog(PSS_RY);
    if (x1Value > 138 && ps2x.Button(PSB_R2))
    {
      int mutedMovement = (x1Value - 138) / 40;
      int targetPos = EEPROM.read(servoBaseAddress) + mutedMovement;
      Serial.println(targetPos);
      moveServoDirect(servoBase, servoBaseAddress, targetPos);
    }
    else if (x1Value < 120 && ps2x.Button(PSB_R2))
    {
      int mutedMovement = (120 - x1Value) / 40;
      int targetPos = EEPROM.read(servoBaseAddress) - mutedMovement;
      Serial.println(targetPos);
      moveServoDirect(servoBase, servoBaseAddress, targetPos);
    }
    if (x2Value > 138 && ps2x.Button(PSB_R2))
    {
      int mutedMovement = (x2Value - 138) / 40;
      int targetPos = EEPROM.read(servoHeadAddress) + mutedMovement;
      Serial.println(targetPos);
      moveServoDirect(servoHead, servoHeadAddress, targetPos);
    }
    else if (x2Value < 120 && ps2x.Button(PSB_R2))
    {
      int mutedMovement = (120 - x2Value) / 40;
      int targetPos = EEPROM.read(servoHeadAddress) - mutedMovement;
      Serial.println(targetPos);
      moveServoDirect(servoHead, servoHeadAddress, targetPos);
    }
    if (y1Value > 138 && ps2x.Button(PSB_R2))
    {
      int mutedMovement = (y1Value - 138) / 40;
      int targetPos = EEPROM.read(servo01Address) + mutedMovement;
      Serial.println(targetPos);
      moveServoDirect(servo01, servo01Address, targetPos);
    }
    else if (y1Value < 120 && ps2x.Button(PSB_R2))
    {
      int mutedMovement = (120 - y1Value) / 40;
      int targetPos = EEPROM.read(servo01Address) - mutedMovement;
      Serial.println(targetPos);
      moveServoDirect(servo01, servo01Address, targetPos);
    }
    if (y2Value > 138 && ps2x.Button(PSB_R2))
    {
      int mutedMovement = (y2Value - 138) / 40;
      int targetPos = EEPROM.read(servo02Address) + mutedMovement;
      Serial.println(targetPos);
      moveServoDirect(servo02, servo02Address, targetPos);
    }
    else if (y2Value < 120 && ps2x.Button(PSB_R2))
    {
      int mutedMovement = (120 - y2Value) / 40;
      int targetPos = EEPROM.read(servo02Address) - mutedMovement;
      Serial.println(targetPos);
      moveServoDirect(servo02, servo02Address, targetPos);
    }
    else if (ps2x.ButtonPressed(PSB_BLUE) && ps2x.Button(PSB_R2))
    {
      Serial.println("pressed circle");
      circlePressed = true;
      circlePressedTime = millis();
    }
    delay(30);
  }
  else if (millis() < circlePressedTime + 50)
  {
    initalServoBase = EEPROM.read(servoBaseAddress);
  }
  else if (millis() < circlePressedTime + 6 * a)
  {
    // after robot has looked around, move back to position 2
    moveServo(servoBase, servoBaseAddress, EEPROM.read(servoBaseAddress), initalServoBase, 90);
    moveServo(servo01, servo01Address, EEPROM.read(servo01Address), initalServo01, 138);
    moveServo(servo02, servo02Address, EEPROM.read(servo02Address), initalServo02, 160);
    moveServo(servoHead, servoHeadAddress, EEPROM.read(servoHeadAddress), initalServoHead, 90);
  }
  else
  {
    Serial.println("Finished 3");
    EEPROM.update(headState, 3);
    posStart = 0;
  }
}

void moveHead()
{
  byte value = EEPROM.read(headState);
  if (ps2x.Button(PSB_R2) && ps2x.Button(PSB_R1) && ps2x.Button(PSB_L2) && ps2x.Button(PSB_L1) && ps2x.ButtonPressed(PSB_BLUE))
  {
    buttonPressed = true;
    if (posStart == 0)
    {
      posStart = millis();
      initalServoDoor = EEPROM.read(servoDoorAddress);
    }
  }
  if (buttonPressed && millis() < posStart + 3 * a)
  {
    // Open door
    moveServo(servoDoor, servoDoorAddress, EEPROM.read(servoDoorAddress), initalServoDoor, 56);
  }
  if (buttonPressed && millis() > posStart + 2 * a)
  {
    // start the sequence
    EEPROM.update(headState, 0);
    posStart = 0;
    buttonPressed = false;
  }
  if (value == 0)
  {
    position01();
  }
  value = EEPROM.read(headState);
  if (value == 1)
  {
    position02();
  }
  value = EEPROM.read(headState);
  if (value == 2)
  {
    position03();
  }
  value = EEPROM.read(headState);
}

void moveTraction()
{
  analogWrite(MotorSpeed_L, 0);
  analogWrite(MotorSpeed_R, 0);

  if (ps2x.Button(PSB_L1))
  {
    int speedBackward = 0;
    int speedForward = 0;
    if (ps2x.Analog(PSS_RY) >= 132) //=========> Right Track
    {
      speedBackward = map(ps2x.Analog(PSS_RY), 0, 255, 0, 200);
      digitalWrite(MotorDir_R, HIGH);
      analogWrite(MotorSpeed_R, speedBackward);
    }

    if (ps2x.Analog(PSS_RY) <= 124)
    {
      speedForward = map(ps2x.Analog(PSS_RY), 0, 255, 200, 0);
      digitalWrite(MotorDir_R, LOW);
      analogWrite(MotorSpeed_R, speedForward);
    }

    if (ps2x.Analog(PSS_LY) >= 132) //=========> Left Track
    {
      speedBackward = map(ps2x.Analog(PSS_LY), 0, 255, 0, 200);
      digitalWrite(MotorDir_L, LOW);
      analogWrite(MotorSpeed_L, speedBackward);
    }

    if (ps2x.Analog(PSS_LY) <= 124)
    {
      speedForward = map(ps2x.Analog(PSS_LY), 0, 255, 200, 0);
      digitalWrite(MotorDir_L, HIGH);
      analogWrite(MotorSpeed_L, speedForward);
    }
    delay(50);
  }
}

void controlLights()
{
  if (ps2x.Button(PSB_R1))
  {
    long elapsedLightTime = millis() - lightPressedTime;

    if (ps2x.ButtonPressed(PSB_GREEN) && elapsedLightTime > 250)
    {
      lightPressedTime = millis();
      digitalWrite(ledgreen, greenlampsState);
      greenlampsState = !greenlampsState;
    }
    if (ps2x.ButtonPressed(PSB_RED) && elapsedLightTime > 250)
    {
      lightPressedTime = millis();
      digitalWrite(ledred, redlampsState);
      redlampsState = !redlampsState;
    }
    if (ps2x.ButtonPressed(PSB_BLUE) && elapsedLightTime > 250)
    {
      lightPressedTime = millis();
      digitalWrite(ledwhite, whitelampsState);
      whitelampsState = !whitelampsState;
    }
  }
}

void controlAnimation()
{
  if (ps2x.Button(PSB_L2))
  {
    if (ps2x.ButtonPressed(PSB_RED))
    {

    }
  }
}

void loop()
{
  long current = millis();
  if (current - lastReadGamepad > gamepadReadDelay)
  {
    ps2x.read_gamepad();
    lastReadGamepad = current;
  }
  moveHead();
  moveTraction();
  controlLights();
  controlAnimation();
}
